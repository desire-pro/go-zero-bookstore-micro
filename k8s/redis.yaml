apiVersion: v1
kind: Service
metadata:
  name: redis-server
  namespace: redis
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9121"
  labels:
    app: redis-server
    repo: none
    product: none
spec:
  type: ClusterIP
  ports:
    - name: redis
      port: 6379
      protocol: TCP
      targetPort: 6379
    - name: redis-exporter
      port: 9121
      protocol: TCP
      targetPort: 9121
  selector:
    app: redis-server
    repo: none
    product: none
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-server
  namespace: redis
  labels:
    app: redis-server
    repo: none
    product: none
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-server
      repo: none
      product: none
  template:
    metadata:
      labels:
        app: redis-server
        repo: none
        product: none
    spec:
      restartPolicy: Always
      containers:
        - name: redis-server
          image: redis:7
          imagePullPolicy: Always
          command:
            - redis-server
            - "/redis-config/redis.conf"
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: redis-config
              mountPath: /redis-config
            - name: redis-storage-volume
              mountPath: /data
          resources:
            requests:
              memory: 200Mi
              cpu: 100m
            limits:
              memory: 200Mi
              cpu: 100m
        - name: redis-exporter
          image: oliver006/redis_exporter:v1.5.3-alpine
          ports:
            - containerPort: 9121
          resources:
            requests:
              memory: 100Mi
              cpu: 100m
            limits:
              memory: 100Mi
              cpu: 100m
      volumes:
        - name: redis-config
          configMap:
            name: redis-config
        - name: redis-storage-volume
          persistentVolumeClaim:
            claimName: redis-server
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: redis
data:
  redis.conf: |
    #bind 127.0.0.1
    bind 0.0.0.0
    port 6379
    timeout 0
    loglevel notice
    logfile ""
    maxclients 10000
    maxmemory 300MB
    maxmemory-policy noeviction
    protected-mode no
    dir /data
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 128mb
    no-appendfsync-on-rewrite no
    save ""
    #save 900 1
    #save 300 10
    #save 60 10000
    dbfilename dump.rdb
    rename-command FLUSHALL "ADMIN_FLUSHALL"
    rename-command FLUSHDB  "ADMIN_FLUSHDB"
    rename-command CONFIG   "ADMIN_CONFIG"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis-server
spec:
  persistentVolumeReclaimPolicy: Retain
  storageClassName: standard
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  claimRef:
    namespace: redis
    name: redis-server
  gcePersistentDisk:
    pdName: redis-goplus-prod
    fsType: ext4
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-server
  namespace: redis
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: redis-client
    product: other
    repo: none
  name: phpredisadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-client
      product: other
      repo: none
  template:
    metadata:
      labels:
        app: redis-client
        product: other
        repo: none
    spec:
      containers:
        - env:
            - name: REDIS_HOSTS
              value: main-redis:redis-server.redis.svc.cluster.local:6379:0
          image: rediscommander/redis-commander:redis-commander-210
          imagePullPolicy: Always
          name: phpredisadmin
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
            limits:
              cpu: 100m
              memory: 200Mi
      restartPolicy: Always