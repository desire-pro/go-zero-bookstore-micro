// Code generated by goctl. DO NOT EDIT.
// Source: change.proto

package changer

import (
	"context"

	"bookstore/rpc/change/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DeleteReq  = __.DeleteReq
	DeleteResp = __.DeleteResp
	UpdateReq  = __.UpdateReq
	UpdateResp = __.UpdateResp

	Changer interface {
		Update(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*UpdateResp, error)
		Delete(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*DeleteResp, error)
	}

	defaultChanger struct {
		cli zrpc.Client
	}
)

func NewChanger(cli zrpc.Client) Changer {
	return &defaultChanger{
		cli: cli,
	}
}

func (m *defaultChanger) Update(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*UpdateResp, error) {
	client := __.NewChangerClient(m.cli.Conn())
	return client.Update(ctx, in, opts...)
}

func (m *defaultChanger) Delete(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*DeleteResp, error) {
	client := __.NewChangerClient(m.cli.Conn())
	return client.Delete(ctx, in, opts...)
}
